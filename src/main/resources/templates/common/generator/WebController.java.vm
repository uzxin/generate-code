package ${package}.controller;

import java.util.List;
import java.util.Map;

import com.just.athena.control.common.enums.HttpResultCode;
import com.just.athena.control.common.util.PageUtils;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.ui.Model;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import ${package}.vo.${className}Rsp;
import ${package}.vo.${className}Req;
import ${package}.service.${className}Service;
import com.just.athena.control.common.util.Query;
import com.just.athena.control.common.bean.HttpResult;

/**
 * ${comments}
 * 
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
 
@Controller
@RequestMapping("/web")
public class ${className}WebController {

	@Autowired
	private ${className}Service ${classname}Service;

    /**
    * 跳转到列表页面
	*/
	@GetMapping("/v1.0/${classname}")
	@RequiresPermissions("${pathName}:${classname}:${classname}")
	String ${className}(){
	    return "${pathName}/${classname}/${classname}";
	}

	@ResponseBody
	@GetMapping("/v1.0/${classname}/list")
	@RequiresPermissions("${pathName}:${classname}:${classname}")
	public PageUtils list(@RequestParam Map<String, Object> params){
		//查询列表数据
        Query query = new Query(params);
		List<${className}Rsp> ${classname}ListRsp = ${classname}Service.list(query);
		int total = ${classname}Service.count(query);
        PageUtils pageUtils = new PageUtils(${classname}ListRsp, total);
		return pageUtils;
	}


    /**
    * 跳转到添加页面
	*/
	@GetMapping("/v1.0/${classname}/add")
	@RequiresPermissions("${pathName}:${classname}:add")
	String add(){
	    return "${pathName}/${classname}/add";
	}

    /**
    * 跳转到编辑页面
	*/
	@GetMapping("/v1.0/${className}/edit/{${pk.attrname}}")
	@RequiresPermissions("${pathName}:${classname}:edit")
	String edit(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname},Model model){
		${className}Rsp ${classname}Rsp = ${classname}Service.get(${pk.attrname});
		model.addAttribute("${classname}", ${classname}Rsp);
	    return "${pathName}/${classname}/edit";
	}
	
	/**
	 * 保存
	 */
	@ResponseBody
	@PostMapping("/v1.0/${classname}/save")
	@RequiresPermissions("${pathName}:${classname}:add")
	public HttpResult save( ${className}Req ${classname}Req){
		if(${classname}Service.save(${classname}Req) >= 0){
			return new HttpResult();
		}
		return new HttpResult( HttpResultCode.FAIL);
	}
	/**
	 * 修改
	 */
	@ResponseBody
	@RequestMapping("/v1.0/${classname}/update")
	@RequiresPermissions("${pathName}:${classname}:edit")
	public HttpResult update( ${className}Req ${classname}Req){
        if(${classname}Service.update(${classname}Req) >= 0){
            return new HttpResult();
        }
        return new HttpResult( HttpResultCode.FAIL);
	}
	
	/**
	 * 删除
	 */
	@ResponseBody
	@PostMapping( "/v1.0/${classname}/remove")
	@RequiresPermissions("${pathName}:${classname}:remove")
	public HttpResult remove( ${pk.attrType} ${pk.attrname}){
		if(${classname}Service.remove(${pk.attrname}) >= 0){
            return new HttpResult();
        }
        return new HttpResult( HttpResultCode.FAIL);
	}
	
	/**
	 * 批量删除
	 */
	@ResponseBody
	@PostMapping( "/v1.0/${classname}/batchRemove")
	@RequiresPermissions("${pathName}:${classname}:batchRemove")
	public HttpResult remove(@RequestParam("ids[]") ${pk.attrType}[] ${pk.attrname}s){
		if(${classname}Service.batchRemove(${pk.attrname}s) >= 0){
            return new HttpResult();
        }
        return new HttpResult( HttpResultCode.FAIL);
	}
	
}
